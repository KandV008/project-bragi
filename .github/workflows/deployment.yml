name: Continuous Deployment
on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-node-env
      - run: npm run build
      - run: npm run test

  publish:
    runs-on: ubuntu-latest
    needs: [build_and_test]
    steps:
      - uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}   

      - name: Generate tag
        id: project
        run: echo "tag=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Push to Docker Hub
        uses: docker/build-push-action@v6
        with:
          push: true
          context: .
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/audifonosxmenos:${{ steps.project.outputs.tag }}
            ${{ secrets.DOCKERHUB_USERNAME }}/audifonosxmenos:latest

  deploy:
    runs-on: ubuntu-latest
    needs:
      - publish
    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: 22
          script: |
            set -e
            echo "üöÄ Iniciando despliegue..."
            cd web-application

            echo "üõë Deteniendo y eliminando contenedor antiguo..."
            docker compose down --remove-orphans

            echo "üßº Eliminando imagen antigua (incluso con etiqueta)..."
            docker image rm -f $(docker images "kandv/audifonosxmenos" --format "{{.ID}}")

            echo "‚¨áÔ∏è Haciendo pull de nueva imagen..."
            docker compose pull audifonosxmenos

            echo "üöÄ Levantando contenedor actualizado..."
            docker compose up -d --force-recreate audifonosxmenos

            echo "‚úÖ Despliegue completado"
